---
# tasks file for create_cluster
- name: Create Cluster
  sonofspike.ocm.create_cluster:
    name: "{{ CLUSTER_NAME }}"
    url_assisted_installer: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}"
    access_token: "{{ access_token }}"
    api_token: "{{ API_TOKEN }}"
    openshift_version: "{{ OPENSHIFT_VERSION }}"
    base_dns_domain: "{{ BASE_DNS_DOMAIN }}"
    cluster_network_cidr: "{{ CLUSTER_NETWORK_CIDR }}"
    cluster_network_host_prefix: "{{ CLUSTER_NETWORK_HOST_PREFIX }}"
    high_availability_mode: None
    service_network_cidr: "{{ SERVICE_NETWORK_CIDR }}"
    pull_secret: "{{ PULL_SECRET | to_json }}"
    ssh_public_key: "{{ SSH_PUBLIC_KEY }}"
    vip_dhcp_allocation: "{{ VIP_DHCP_ALLOCATION | lower | bool }}"
    http_proxy: "{{ HTTP_PROXY }}"
    https_proxy: "{{ HTTPS_PROXY }}"
    no_proxy: "{{ NO_PROXY }}"
    ntp_source: "{{ NTP_SERVER }}"
  register: response
        
- debug:
    var: response.json
  when: debug and create  | bool == True

- name: Set the cluster ID
  set_fact:
    cluster_id: "{{ response.json.id }}"
  when: create | bool == True

- name: "Save cluster_id"
  copy:
    content: "{{ cluster_id }}"
    dest: cluster.txt
  delegate_to: localhost
  become: no
  when: create | bool == True

- import_role:
    name: generate_discovery_iso
  vars:
    download: False

- name: Generate discovery ignition file
  sonofspike.ocm.get_discovery_ignition:
    access_token: "{{ access_token }}"
    api_token: "{{ API_TOKEN }}"
    cluster_id: "{{ cluster_id }}"
  register: discovery_ignition

- debug:
    var: discovery_ignition.result
  when: debug | bool == True

- ansible.builtin.set_fact:
    discovery_ignition_json: "{{ discovery_ignition.result }}"

- name: "Copy discovery_ignition cluster_id"
  copy:
    content: "{{ discovery_ignition_json }}"
    dest: discovery-ignition-before.txt
  delegate_to: localhost
  become: no

- debug:
    var: discovery_ignition.result
  when: debug | bool == True

- name: "Copy discovery_ignition.result"
  copy:
    content: "{{ discovery_ignition.result }}"
    dest: discovery-ignition.txt
  delegate_to: localhost
  become: no

#### patch cluster install config on restricted network environments ###
- name: get install config
  sonofspike.ocm.get_install_config:
    access_token: "{{ access_token }}"
    api_token: "{{ API_TOKEN }}"
    cluster_id: "{{ cluster_id }}"
    url_config_install_cluster: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}/{{ cluster_id }}/install-config"
  register: install_config
- debug:
    var: install_config.json

- name: "Copy install_config"
  copy:
    content: "{{ install_config.json }}"
    dest: install-config.txt
  delegate_to: localhost
  become: no

- name: Load patch for install config
  set_fact:
    patch_install_config: "{{ lookup('template', 'patch-install-config.j2') | from_yaml }}"
  when: disconnected | bool == True

- name: Add network_type to patch_install_config
  set_fact:
    patch_install_config: "{{ lookup('template', 'patch-network-type.j2') | from_yaml | combine(patch_install_config | default({}))  }}"
  when: network_type is defined

- debug:
    var: patch_install_config
  when: debug and disconnected  | bool == True

- name: patch install config
  sonofspike.ocm.patch_cluster:
    access_token: "{{ access_token }}"
    api_token: "{{ API_TOKEN }}"
    cluster_id: "{{ cluster_id }}"
    url_config_install_cluster: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}/{{ cluster_id }}/install-config"
    patch_install: "{{ patch_install_config | to_json(ensure_ascii=False) | string | to_json(ensure_ascii=False) | string }}"
  register: install_config
  when: disconnected | bool == True

- name: get install conf
  sonofspike.ocm.get_install_config:
    access_token: "{{ access_token }}"
    api_token: "{{ API_TOKEN }}"
    cluster_id: "{{ cluster_id }}"
    url_config_install_cluster: "{{ URL_ASSISTED_INSTALLER_CLUSTERS }}/{{ cluster_id }}/install-config"
  register: install_config

- debug:
    var: install_config.json
  when: debug | bool == True

- name: "Copy install_config-json to patched-config.txt"
  copy:
    content: "{{ install_config.json }}"
    dest: patched-config.txt
  delegate_to: localhost
  become: no

- name: Apply manifests before cluster installation
  include_tasks: manifest.yml
  with_items:
    - 50-worker-nm-fix-ipv6.yml
    - 50-worker-remove-ipi-leftovers.yml
    - 02-fix-ingress-config.yml
    - 01-master-node-scheduler.yml
  when: manifests  | bool == True