---
# tasks file for install_cluster

# TODO: Validate cluster settings
- name : Count the hosts to be discovered
  set_fact:
    inventory_hosts: "{{ groups['masters'] | length + groups['workers'] | default([]) | length }}"

- name: Join list for workers and masters
  set_fact:
    nodes: "{{ groups['masters'] + groups['workers'] | default([]) }}"
    inventory_nodes: "{{ groups['masters'] + groups['workers'] | default([]) }}"


- name: Wait for 20 min until all the hosts are discovered
  sonofspike.ocm.discover_host:
    access_token: "{{ access_token }}"
    api_token: "{{ API_TOKEN }}"
    url_assisted_installer_cluster: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}"
  register: cluster
  until: ( cluster.json.hosts | length == inventory_nodes | length ) and ( cluster.json.status == "pending-for-input")
  retries: 20
  delay: 60
  when: install | bool == True

- debug:
    var: cluster.json
    
- name: Patch discovered hosts
  include_tasks: hosts_discovery.yml
  with_items:
    - "{{ cluster.json.hosts }}"
  loop_control:
    loop_var: discovered_host
  no_log: True

# Patch the cluster with the API Virtual IP

- name: Patch cluster with host networks (SNO)
  sonofspike.ocm.rest_api_call:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}"
    method: "PATCH"
    query: None
    access_token: "{{ access_token }}"
    api_token: "{{ api_token }}"
    data: {
        "host_networks": "{{ CLUSTER_NETWORK_HOST }}",
        "machine_network_cidr": "{{ MACHINE_NETWORK_CIDR }}"
    }
  when: 
    - install | bool == True and
      sno == True
  register: response

- debug:
    var: response.json
  when: debug | bool == True


# Monitor cluster discovery
- name: Wait for 20 min until the cluster is ready
  sonofspike.ocm.rest_api_call:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}"
    method: "GET"
    query: None
    data: {}
    access_token: "{{ access_token }}"
    api_token: "{{ api_token }}"
  register: response
  until: "response.json.status == 'ready'"
  retries: 20
  delay: 60
  when: install | bool == True 
# Install cluster
- name: Install cluster
  sonofspike.ocm.rest_api_call:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}/actions/install"
    method: "POST"
    query: None
    data: {}
    access_token: "{{ access_token }}"
    api_token: "{{ api_token }}"
  when: install | bool == True 
  register: response

- name: Debug response
  debug:
    var: response.json
  when: install | bool == True 


