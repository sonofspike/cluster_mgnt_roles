---
# tasks file for install_cluster/hosts_discovery

- name: Wait for 10 min until the node {{ discovered_host.id }} discovery is done
  sonofspike.ocm.rest_api_call:
    url: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}/hosts/{{ discovered_host.id }}"
    method: "GET"
    query: None
    access_token: "{{ access_token }}"
    api_token: "{{ api_token }}"
    data: {}
  register: response
  until: response.json.inventory is defined
  retries: 10
  delay: 60

- name: Identify the discovered host {{ discovered_host.id }}
  set_fact:
    host: "{{ response.json }}"
  when: discovered_host.inventory is not defined

- name: Identify the discovered host {{ discovered_host.id }}
  set_fact:
    host: "{{ discovered_host }}"
  when: discovered_host.inventory is defined

- name: Identify the host {{ host.id }} properties
  set_fact:
    host_inventory: "{{ host.inventory }}"
    host_id: "{{ host.id }}"
    host_name: "{{ host.requested_hostname | default('node' + lookup('password', '/dev/null chars=ascii_lowercase,digits length=8')) }}"
    host_role: "auto-assign"

- name: Identify the host {{ host.id }} interfaces
  set_fact:
   host_interfaces: "{{ host_inventory.interfaces }}"

- name : Set host name and role for {{ host.id }}
  set_fact:
    host_name: "{{ item.0 }}"
    host_role: "{{ hostvars[item.0]['role'] }}"
  when: hostvars[item.0]['mac'] is defined and hostvars[item.0]['mac'] == item.1.mac_address
  loop: "{{ inventory_nodes | product(host_interfaces) | list }}"
  no_log: True

- name : Prepare hosts name and role for {{ host_name }}
  set_fact:
    host:
      id: "{{ host_id }}"
      hostname: "{{ host_name }}"
      role: "{{ host_role }}"
  when: host_name is defined or host_role is defined

- name: Set HostName for {{ host_name }}
  sonofspike.ocm.set_hostname:
    access_token: "{{ access_token }}"
    api_token: "{{ API_TOKEN }}"
    host_names:  "{{ host }}" 
    url_set_host_name: "{{ URL_ASSISTED_INSTALLER_CLUSTER }}"
    hosts_roles: "{{ host }}" 
  register: http_reply
